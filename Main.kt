import model.*
import utility.writeTableR0

fun main() {

    // Data
    val results0 = arrayListOf(0.25182244016751076, 0.26288426302360024, 0.2823479434879955, 0.3171439677058987, 0.3574359308258469, 0.4403035880283735, 0.5612329128295339, 0.734369964928991, 0.7591393851610082, 0.8127117751808802, 0.8147161629513052, 0.8599371168544394, 0.8821515223785783, 0.9000499652583734, 0.8078824883034048, 0.7990455847417242, 0.8293350587011531, 0.8926921196363171, 0.8948903476553506, 0.8303774963996682, 0.8494985341768236, 0.8210759303084805, 0.6435933851309652, 0.7570990724551001, 0.7204709984957767, 0.746287978542017, 0.8151758496370686, 0.8075051156704353, 0.8134089125791106, 0.7916529012547466, 0.7846362737171192, 0.6873994618334011, 0.7129848705873476, 0.6906685398799988, 0.7049230192250583, 0.6781394867825101, 0.6626225844224586, 0.6832594119176568, 0.6924752451481782, 0.5422830004719856, 0.5075566208989916, 0.5384819818784383, 0.5321464689644941, 0.5351105819316702, 0.47520164198896675, 0.3828593965596466, 0.34768742719598483, 0.3190223535620339, 0.26006047912707, 0.23361019083001802, 0.22844251071010163, 0.2366223825562276)
    val results3 = arrayListOf(0.19604506394025076, 0.20193777515299374, 0.22399308282803904, 0.24815396260420272, 0.30252534107320034, 0.4047032156348034, 0.6303849439052748, 0.8552354899421735, 0.9441656093691423, 1.0845099252297399, 1.1604460934992287, 1.214975135671269, 1.2411094540056924, 1.2504926755828722, 1.0444524353719726, 0.9584534233696338, 1.019506499099767, 1.0811743208232192, 1.0668121112086242, 0.9062145817596361, 0.898459725969597, 0.8740971573235337, 0.6146207442588435, 0.7477011526128818, 0.8429278891740049, 0.9672253673157215, 1.067869526972355, 1.0977434618676145, 1.0943005545199944, 1.0765726403837448, 1.063679762099538, 0.8888330944557691, 0.8897069334614705, 0.925321325139089, 0.9204575338949169, 0.8841885768588913, 0.8730539422786554, 0.8872998650961345, 0.8591218735677708, 0.5865218326227677, 0.48659235097637216, 0.5414088327245665, 0.5751251581333265, 0.5670208694804366, 0.4534663991038947, 0.3192542488601719, 0.2779865270929714, 0.2561179256262069, 0.2007851556658576, 0.17746017232313616, 0.16949838579380497, 0.17965263132568823)
    val results7 = arrayListOf(0.19345459756069855, 0.21829180831547088, 0.22980897087318528, 0.2605175199727763, 0.3573901639079906, 0.6035911142757444, 1.1939338400386723, 1.5767337183363426, 1.5890929739807764, 1.7002375241094019, 1.7485909609688892, 1.8318117119096216, 1.8340376111272902, 1.688188055801625, 1.0094468749858931, 1.118419481470992, 1.3907549233083198, 1.7009634394099546, 1.852597751377416, 1.5450372579035814, 1.5481420345895587, 1.3677807505971327, 0.6097621874249628, 0.9273818092166211, 1.530540765158463, 1.955839733255037, 2.2803630901086422, 2.434005709826208, 2.4552584926208603, 2.3777168021825856, 2.2822051949925553, 1.7626417082446035, 1.741227872138764, 1.402555533401482, 0.9421968200423947, 0.9887109115216669, 1.1795532602015117, 1.366059964208148, 1.3084300081705944, 0.8162781002203758, 0.6641085899078055, 0.8156481006517613, 0.7340440813158935, 0.5169703000833097, 0.3052465696110849, 0.19976482592622738, 0.1928490400468938, 0.20405073094710038, 0.17360186105364275, 0.1468963618976928, 0.15274652961106794, 0.16966371826616905)
    val results15 = arrayListOf(0.7913657375760889, 0.8142529893261037, 0.9357821303528123, 1.0354511785858023, 1.1983457846897838, 1.3824616510664915, 1.9133736403931187, 2.5004617774034172, 2.5944381097762497, 2.5830327761540315, 2.4724441801141035, 2.555017147686152, 2.7317455373092523, 2.593585804717274, 2.0991071907701286, 2.2801345230265277, 2.624650066690415, 2.8765042655206217, 2.998959569729588, 2.5357884379727667, 2.8511356958066894, 2.8436064140217168, 1.8789703846226224, 2.8560920085401, 3.9946122274252374, 4.025089167763097, 4.710147882294888, 5.017752828295392, 5.254469010963799, 4.935250459564264, 4.755646476539832, 3.4112783436536747, 3.5324988450138397, 3.239221382016473, 2.943512549241806, 2.7158663439391675, 2.4705246177585822, 2.4547137337885334, 2.8021599033938633, 1.3053129497278602, 1.2353950648863392, 1.6486362395605212, 1.6043572700811226, 1.5687832268753434, 1.3494191206415354, 0.9942396659179533, 1.0844279424478613, 1.0199861681646567, 0.9528322173367634, 0.7792883878992755, 0.7725615839249473, 0.7798691267430626)

    // Parameters
    val durationBias = 8.0
    var bMap = mapOf("fluA" to 2.1, "fluB" to 2.0, "RV" to 3.6, "RSV" to 4.9, "AdV" to 5.3, "PIV" to 4.5, "CoV" to 4.3)
    var tMap = mapOf("fluA" to -0.8, "fluB" to -0.8, "RV" to -0.1, "RSV" to -0.5, "AdV" to -0.3, "PIV" to -0.1, "CoV" to -0.5)
    var imMap = mapOf("fluA" to 366, "fluB" to 366, "RV" to 60, "RSV" to 60, "AdV" to 150, "PIV" to 150, "CoV" to 150)

    // Create a world
    val world = World()

    // Run simulation
    val worldStats = world.runSimulation(durationBias, bMap, tMap, imMap)
    // Sum of RSS for each age group
    var error = 0.0
    for (i in (0..51)) {
        error += (worldStats[i][0] / 9863.0 - results0[i]) * (worldStats[i][0] / 9863.0 - results0[i])
        error += (worldStats[i][1] / 9863.0 - results3[i]) * (worldStats[i][1] / 9863.0 - results3[i])
        error += (worldStats[i][2] / 9863.0 - results7[i]) * (worldStats[i][2] / 9863.0 - results7[i])
        error += (worldStats[i][3] / 9863.0 - results15[i]) * (worldStats[i][3] / 9863.0 - results15[i])
    }
    println("Error: $error")


//    val r0 = arrayListOf(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
//    val numOfIterations = 20
//
//    for (m in (10..10)) {
//        println("********* R0 month: $m *************")
//        r0[0] = 0.0
//        r0[1] = 0.0
//        r0[2] = 0.0
//        r0[3] = 0.0
//        r0[4] = 0.0
//        r0[5] = 0.0
//        r0[6] = 0.0
//        for (ill in arrayListOf("fluA", "fluB", "RV", "RSV", "AdV", "PIV", "CoV")) {
////        for (ill in arrayListOf("RV", "AdV", "PIV")) {
//            println("R0 infection: $ill")
//            var localR0 = 0.0
//            for (i in (1..numOfIterations)) {
//                println("Iteration: $i")
//                localR0 += world.runR0(a, bMap, tMap, ill, m, 9)
//            }
//            localR0 /= numOfIterations
//            when (ill) {
//                "fluA" -> r0[0] = localR0
//                "fluB" -> r0[1] = localR0
//                "RV" -> r0[2] = localR0
//                "RSV" -> r0[3] = localR0
//                "AdV" -> r0[4] = localR0
//                "PIV" -> r0[5] = localR0
//                "CoV" -> r0[6] = localR0
//            }
//        }
//        writeTableR0("D:\\Dev\\Projects\\KotlinProjects\\MasterThesis\\src\\output\\r0.xlsx", (m - 1), r0)
}